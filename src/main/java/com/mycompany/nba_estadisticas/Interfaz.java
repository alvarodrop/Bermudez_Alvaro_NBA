/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.nba_estadisticas;


import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.*;

import java.io.*;
import java.util.*;


/**
 *
 * @author alvag
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        anotados3 = new javax.swing.JSpinner();
        totalTiros2 = new javax.swing.JSpinner();
        anotados2 = new javax.swing.JSpinner();
        FGButton = new javax.swing.JButton();
        eFGButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        totalTiros3 = new javax.swing.JSpinner();
        Guardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(173, 216, 230));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel4.setBackground(new java.awt.Color(51, 0, 204));
        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 14)); // NOI18N
        jLabel4.setText("Estadisticas Baloncesto");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 12)); // NOI18N
        jLabel6.setText("Anotados de 3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 12)); // NOI18N
        jLabel7.setText("Anotados de 2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(jLabel7, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 12)); // NOI18N
        jLabel8.setText("Total tiros de 2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(jLabel8, gridBagConstraints);

        anotados3.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));
        anotados3.setPreferredSize(new java.awt.Dimension(64, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(anotados3, gridBagConstraints);

        totalTiros2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));
        totalTiros2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        totalTiros2.setPreferredSize(new java.awt.Dimension(64, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(totalTiros2, gridBagConstraints);

        anotados2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));
        anotados2.setPreferredSize(new java.awt.Dimension(64, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(anotados2, gridBagConstraints);

        FGButton.setText("FG");
        FGButton.setPreferredSize(new java.awt.Dimension(72, 30));
        FGButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FGButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(FGButton, gridBagConstraints);

        eFGButton.setText("eFG");
        eFGButton.setPreferredSize(new java.awt.Dimension(72, 30));
        eFGButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eFGButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(eFGButton, gridBagConstraints);

        jButton1.setText("Reset");
        jButton1.setPreferredSize(new java.awt.Dimension(72, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(jButton1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 12)); // NOI18N
        jLabel1.setText("Total Tiros de 3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(jLabel1, gridBagConstraints);

        totalTiros3.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));
        totalTiros3.setPreferredSize(new java.awt.Dimension(64, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(totalTiros3, gridBagConstraints);

        Guardar.setText("Excel");
        Guardar.setPreferredSize(new java.awt.Dimension(72, 30));
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(Guardar, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FGButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FGButtonActionPerformed
        // Calcular FG
        double fg = calcularFG();
        if (fg == -1) return; // Validación fallida, salir del método

        // Mostrar el resultado
        String resultadoFG = "FG: " + String.format("%.2f", fg) + "%";
        Resultado resultadoFrame = new Resultado(resultadoFG);
        resultadoFrame.setVisible(true);
    }//GEN-LAST:event_FGButtonActionPerformed
    
    
    private double calcularFG() {
        // Obtener valores
        int tiros2 = (int) anotados2.getValue();
        int tiros3 = (int) anotados3.getValue();
        int tirosTotales = Integer.parseInt(totalTiros2.getValue().toString()) + Integer.parseInt(totalTiros3.getValue().toString());

        // Validar tiros totales
        if (tirosTotales == 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "El total de tiros no puede ser 0", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return -1; // Indicar error
        }

        // Calcular FG
        return ((double) (tiros2 + tiros3) / tirosTotales) * 100;
    }
    
    private void eFGButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eFGButtonActionPerformed
        // Calcular eFG
        double efg = calcularEFG();
        if (efg == -1) return; // Validación fallida, salir del método

        // Mostrar el resultado
        String resultadoEFG = "eFG: " + String.format("%.2f", efg) + "%";
        Resultado resultadoFrame = new Resultado(resultadoEFG);
        resultadoFrame.setVisible(true);   
        //Hacemos visible el frame 
    }//GEN-LAST:event_eFGButtonActionPerformed
    
    //Funcion para calcular efg
    private double calcularEFG() {
        // Obtener valores
        int tiros2 = (int) anotados2.getValue();
        int tiros3 = (int) anotados3.getValue();
        int tirosTotales = Integer.parseInt(totalTiros2.getValue().toString()) + Integer.parseInt(totalTiros3.getValue().toString());

        // Validar tiros totales
        if (tirosTotales == 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "El total de tiros no puede ser 0", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return -1; // Indicar error
        }

        // Calcular eFG
        return ((tiros2 + (0.5 * tiros3)) / tirosTotales) * 100;
    }
    
    //Guardar en el excel
    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        // Calcular FG y eFG
        double fg = calcularFG();
        double efg = calcularEFG();
        if (fg == -1 || efg == -1) return; // Validación fallida, salir del método

        // Obtener valores necesarios
        int tirosAnotados2 = (int) anotados2.getValue();
        int totalTirosD2 = (int) totalTiros2.getValue();
        int tirosAnotados3 = (int) anotados3.getValue();
        int totalTirosD3 = (Integer) totalTiros2.getValue();

        int tirosTotales = totalTirosD2 + totalTirosD3; // Sumar los totales de tiros

        // Guardar en Excel
        guardarEnExcel(tirosAnotados2, tirosAnotados3, totalTirosD2, totalTirosD3, tirosTotales, fg, efg);                
    }//GEN-LAST:event_GuardarActionPerformed

    


    private static final String FILE_PATH = "C:\\GradoSuperior\\2º\\DI\\NBA_Estadisticas\\NBA_Estadisticas\\src\\main\\java\\com\\mycompany\\nba_estadisticas\\Estadisticas_Baloncesto.xlsx";

   public void guardarEnExcel(int anotados2, int anotados3, int totalTiros2, int totalTiros3, int totalTiros, double fg, double efg) {
    File excelFile = new File(FILE_PATH);
    Workbook workbook = null;

    try {
        // Si el archivo no existe, creamos uno nuevo desde cero
        if (!excelFile.exists()) {
            workbook = new XSSFWorkbook(); // Crear un nuevo libro de trabajo
        } else {
            // Si el archivo existe, lo abrimos
            FileInputStream fileInputStream = new FileInputStream(excelFile);
            workbook = new XSSFWorkbook(fileInputStream);
        }

        // Intentamos acceder a la primera hoja, si no existe, la creamos
        Sheet sheet = workbook.getSheet("Estadísticas Baloncesto");
        if (sheet == null) {
            sheet = workbook.createSheet("Estadísticas Baloncesto"); // Crear nueva hoja si no existe
        }

        // Verificamos si el archivo está vacío o no
        int lastRowNum = sheet.getPhysicalNumberOfRows(); // Obtener el número real de filas (sin contar las vacías)
        Row newRow = sheet.createRow(lastRowNum); // Crear una nueva fila debajo de la última fila con datos

        if (lastRowNum == 0) {  // Si no hay datos, crear los encabezados
            Row headerRow = sheet.createRow(0);
            headerRow.createCell(0).setCellValue("Anotados 2");
            headerRow.createCell(1).setCellValue("Anotados 3");
            headerRow.createCell(2).setCellValue("Tiros de 2");
            headerRow.createCell(3).setCellValue("Tiros de 3");
            headerRow.createCell(4).setCellValue("Total Tiros");
            headerRow.createCell(5).setCellValue("FG (%)");
            headerRow.createCell(6).setCellValue("eFG (%)");

            // Después de crear los encabezados, creamos la primera fila de datos
            newRow = sheet.createRow(1); // La primera fila de datos se pondrá debajo de los encabezados
        }

        // Añadir los datos a la nueva fila
        newRow.createCell(0).setCellValue(anotados2);  // Anotados de 2
        newRow.createCell(1).setCellValue(anotados3);  // Anotados de 3
        newRow.createCell(2).setCellValue(totalTiros2);  // Tiros de 2
        newRow.createCell(3).setCellValue(totalTiros3);  // Tiros de 3
        newRow.createCell(4).setCellValue(totalTiros);  // Total de Tiros
        newRow.createCell(5).setCellValue(fg);  // FG (%)
        newRow.createCell(6).setCellValue(efg);  // eFG (%)

        // Escribir los datos en el archivo Excel
        try (FileOutputStream fileOut = new FileOutputStream(excelFile)) {
            workbook.write(fileOut);
            System.out.println("Archivo Excel guardado con éxito");
        }

    } catch (IOException e) {
        e.printStackTrace();
    } finally {
        try {
            if (workbook != null) {
                workbook.close();  // Cerrar el libro de trabajo
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FGButton;
    private javax.swing.JButton Guardar;
    private javax.swing.JSpinner anotados2;
    private javax.swing.JSpinner anotados3;
    private javax.swing.JButton eFGButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSpinner totalTiros2;
    private javax.swing.JSpinner totalTiros3;
    // End of variables declaration//GEN-END:variables
}
